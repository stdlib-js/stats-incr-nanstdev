{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar incrstdev = require( '@stdlib/stats-incr-stdev' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a corrected sample standard deviation, ignoring `NaN` values.\n*\n* @param {number} [mean] - mean value\n* @throws {TypeError} must provide a number\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnanstdev();\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator( NaN );\n* // returns ~4.95\n*\n* s = accumulator();\n* // returns ~4.95\n*\n* @example\n* var accumulator = incrnanstdev( 3.0 );\n*/\nfunction incrnanstdev( mean ) {\n\tvar stdev;\n\tif ( arguments.length ) {\n\t\tstdev = incrstdev( mean );\n\t} else {\n\t\tstdev = incrstdev();\n\t}\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample standard deviation or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 || isnan( x ) ) {\n\t\t\treturn stdev();\n\t\t}\n\t\treturn stdev( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnanstdev;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a corrected sample standard deviation incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats-incr-nanstdev\n*\n* @example\n* var incrstdev = require( '@stdlib/stats-incr-nanstdev' );\n*\n* var accumulator = incrnanstdev();\n*\n* var s = accumulator();\n* // returns null\n*\n* s = accumulator( 2.0 );\n* // returns 0.0\n*\n* s = accumulator( -5.0 );\n* // returns ~4.95\n*\n* s = accumulator( NaN );\n* // returns ~4.95\n*\n* s = accumulator();\n* // returns ~4.95\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAY,QAAS,0BAA2B,EAiCpD,SAASC,EAAcC,EAAO,CAC7B,IAAIC,EACJ,OAAK,UAAU,OACdA,EAAQH,EAAWE,CAAK,EAExBC,EAAQH,EAAU,EAEZI,EASP,SAASA,EAAaC,EAAI,CACzB,OAAK,UAAU,SAAW,GAAKN,EAAOM,CAAE,EAChCF,EAAM,EAEPA,EAAOE,CAAE,CACjB,CACD,CAKAP,EAAO,QAAUG,ICnCjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "incrstdev", "incrnanstdev", "mean", "stdev", "accumulator", "x", "main"]
}
